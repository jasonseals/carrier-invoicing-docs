openapi: 3.0.1
info:
  version: '1.0'
  title: Carrier Invoicing API
  description: The Carrier Invoicing API streamlines the billing and payment process
    for freight carriers. It enables faster invoice submission, supports documentation
    uploads, and allows for status tracking to optimize billing workflows. Its integration
    with your TMS ensures timely and accurate invoice generation, validation, and
    reconciliation.
  termsOfService: https://mcleodsoftware.com/terms
  contact:
    name: API Support
    email: apisupport@mcleodsoftware.com
    url: https://mcleodsoftware.com
  license:
    name: McLeod Software
    url: https://mcleodsoftware.com
security:
- APIKeyAuth: []
- OAuth:
  - carrieraudit:fullaccess
servers:
- url: https://api.mcleodsoftware.com/carrieraudit-sandbox
  description: Sandbox
- url: https://api.mcleodsoftware.com/carrieraudit
  description: Live
paths:
  /shipments:
    parameters:
    - $ref: '#/components/parameters/X-Correlation-Id'
    - $ref: '#/components/parameters/X-Api-Key'
    - $ref: '#/components/parameters/Authorization'
    - $ref: '#/components/parameters/X-Mcld-Tenant'
    get:
      summary: Retrieve Shipment Details
      description: Return a list of shipments without embedded documents. Use the
        detail endpoint or supporting-documents endpoints to retrieve document images.
      tags:
      - Shipments
      parameters:
      - name: status
        in: query
        required: false
        description: Filter by shipment status code (P=in progress, D=delivered).
        schema:
          type: string
          enum:
          - P
          - D
      responses:
        '200':
          description: OK
          headers:
            X-Total-Count:
              $ref: '#/components/headers/Response-X-Total-Count'
          content:
            application/json:
              schema:
                type: object
                properties:
                  shipments:
                    type: array
                    items:
                      $ref: '#/components/schemas/ShipmentSummary'
                required:
                - shipments
              example:
                shipments:
                - shipmentId: SHP-001
                  status: P
                  totalAmount: 395.0
                  currency: USD
                  dueDate: '2025-09-15'
                - shipmentId: SHP-002
                  status: D
                  totalAmount: 220.0
                  currency: USD
                  dueDate: '2025-09-10'
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
      security:
      - OAuth:
        - carrieraudit:fullaccess
  /shipments/{shipmentId}:
    parameters:
    - $ref: '#/components/parameters/X-Correlation-Id'
    - $ref: '#/components/parameters/X-Api-Key'
    - $ref: '#/components/parameters/Authorization'
    - $ref: '#/components/parameters/X-Mcld-Tenant'
    get:
      summary: Retrieve a Specific Shipment
      tags:
      - Shipments
      description: Retrieves the shipment with the specified ID.
      parameters:
      - name: shipmentId
        in: path
        required: true
        description: The unique identifier of the shipment
        schema:
          type: string
        example: Movement-20234
      responses:
        '200':
          $ref: '#/components/responses/Shipment-200'
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
      security:
      - OAuth:
        - carrieraudit:fullaccess
  /shipments/{shipmentId}/supporting-documents:
    post:
      summary: Upload a Supporting Document
      description: Upload a supporting document for the specified shipment, such as
        a bill of lading or delivery receipt.
      tags:
      - Documents
      parameters:
      - name: shipmentId
        in: path
        required: true
        description: The shipment ID to attach to the document.
        schema:
          type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to upload.
                documentType:
                  type: string
                  description: Type of document (e.g., BOL, RateConfirmation, LumperReceipt,
                    DeliveryReceipt)
                  example: BOL
              required:
              - file
              - documentType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      type: object
                      required: [id, size]
                      properties: 
                        id: 
                          type: string
                          description: Identifier of the document (maps to DocumentPower ID).
                          example: doc123456
                        index: 
                          type: string
                          description: Optional DocumentPower index within cabinet/folder.
                          example: index123
                        size:
                          type: integer
                          description: File size in bytes.
                          example: 2048000
                required:       
                  - documents    
        '201':
          description: Document submitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
      security:
      - OAuth:
        - carrieraudit:fullaccess
    get:
      summary: List Documents for a Shipment
      tags:
      - Documents
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: A list of supporting documents for the shipment (empty array if none).
          content: 
            application/json:
              schema:
                type: array
                items: 
                  type: object
                  required: [id, size]
                  properties: 
                    id:
                      type: string
                      description: Identifier of the document (maps to DocumentPower ID).
                      example: doc123456
                    index:
                      type: string
                      description: DocumentPower index within cabinet/folder (if applicable).
                      example: index123 
                    size:
                      type: integer
                      description: File size in bytes.
                      example: 2048000          
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
      security:
      - OAuth:
        - carrieraudit:fullaccess
  /shipments/{shipmentId}/supporting-documents/{documentId}:
    get:
      summary: Get a Supporting Document (Metadata)
      description: Returns JSON metadata about the supporting document. Use the /content
        subresource to download the appropriate document image.
      tags:
      - Documents
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Document metadata.
          content:
            application/json:
              schema:
                type: object
                required: [id, size]
                properties: 
                  id: 
                    type: string
                  index:
                    type: string
                  size:
                    type: integer
        '404':
          description: Document not found.
  /shipments/{shipmentId}/supporting-documents/{documentId}/content:
    get:
      summary: Download Document Image
      description: Streams the raw file bytes for the specified supporting document.
      tags:
      - Documents
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        required: true
        schema:
          type: string
      - name: download
        in: query
        required: false
        description: When true, sets Content-Disposition to attachment.
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: File stream
          headers:
            Content-Disposition:
              $ref: '#/components/headers/Response-Content-Disposition'
            Content-Length:
              $ref: '#/components/headers/Response-Content-Length'
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
  /shipments/{shipmentId}/update:
    parameters:
      - $ref: '#/components/parameters/X-Correlation-Id'
      - $ref: '#/components/parameters/X-Api-Key'
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/X-Mcld-Tenant'
    patch:
      tags: [Shipments] 
      summary: Update Shipment 
      description: Updates the BOL, weight, pieces/cases, carrier linehaul pay amount, and accessorial pay amount for a shipment. All other fields are ignored.
      security:
      - OAuth:
        - carrieraudit:fullaccess
      parameters:
        - name: shipmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentUpdateLimited'     
      responses:
        '200':
          description: Shipment updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '400': {$ref: '#/components/responses/Standard-400'}    
        '401': {$ref: '#/components/responses/Standard-401'}
        '403': {$ref: '#/components/responses/Standard-403'} 
        '404': {$ref: '#/components/responses/Standard-404'} 
        '500': {$ref: '#/components/responses/Standard-500'}  
  /events:
    get:
      summary: List Events
      description: Returns a list of carrier audit events.
      tags:
      - Events
      parameters:
      - name: startDate
        in: query
        required: false
        description: Filter events created on or after this date (YYYY-MM-DD).
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: false
        description: Filter events created on or before this date (YYYY-MM-DD).
        schema: 
          type: string
          format: date
      - name: type
        in: query
        required: false
        description: Filter by event type.
        schema:
          type: string       
      responses:
        '200':
          description: A list of events.
          content:
            application/json:
              schema:
                type: object
                properties: 
                  items: 
                    type: array
                    items: { $ref: '#/components/schemas/Event'}
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
  /actions:
    post:
      summary: Execute an action
      description: Execute a named action with parameters (e.g., approvePayment, disputePayment).
      tags:
      - Actions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                actionName:
                  type: string
                  example: approvePayment
                parameters:
                  type: object
                  enum:
                  - VERIFY
                  additionalProperties: true
                  example:
                    shipmentId: Movement-20250808
                    reason: Approve to pay carrier
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
  /event-subscriptions:
    get:
      summary: List Event Subscriptions
      description: Returns event subscriptions for the authenticated tenant. Use the
        'event' filter to narrow by event type.
      tags:
      - Events
      parameters:
        - $ref: '#/components/parameters/X-Correlation-Id'
        - $ref: '#/components/parameters/X-Api-Key'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/X-Mcld-Tenant'
        - name: startingEvent
          in: query
          required: false
          description: The event ID from which to start. Return subscriptions created at or after this event.     
          schema:
            type: string
      responses:
        '200':
          description: A list of event subscriptions.
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/EventSubscription'
        '400':  
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '500':
          $ref: '#/components/responses/Standard-500'
    post:
      summary: Subscribe to Shipment Events
      description: Creates a subscription to receive notifications when specific shipment
        events occur.
      tags:
      - Events
      parameters:
        - $ref: '#/components/parameters/X-Correlation-Id'
        - $ref: '#/components/parameters/X-Api-Key'
        - $ref: '#/components/parameters/Authorization'
        - $ref: '#/components/parameters/X-Mcld-Tenant'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventSubscriptionCreate'
            examples:
              example:
                value:
                  event: paymentApproved
                  type: WebHook
                  url: https://client.example.com/hooks/shipments
                  httpVerb: POST
      responses:
        '201':
          description: Subscription created.
          headers:
            Location:
              description: URL of the newly created subscription.
              schema:
                type: string
                format: url 
                example: https://api.mcleodsoftware.com/carrieraudit/event-subscriptions/SUB-9f2c7a
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/EventSubscription'  
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
  /event-subscriptions/{subscriptionId}:
    parameters:
    - name: subscriptionId
      in: path
      required: true
      description: ID of the subscription.
      schema:
        type: string
    delete:
      summary: Unsubscribe from events
      description: Deletes an existing event subscription.
      tags:
      - Events
      parameters:
      - name: subscriptionId
        in: path
        required: true
        description: ID of the subscription to delete.
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
    get:
      summary: Retrieve an Event Subscription
      description: Returns the event subscription identified by 'subscriptionId'.
      tags:
      - Events
      parameters:
      - name: subscriptionId
        in: path
        description: The ID of the subscription to retrieve.
        required: true 
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
  /shipments/{shipmentId}/carrier-pay:
    parameters:
    - $ref: '#/components/parameters/X-Correlation-Id'
    - $ref: '#/components/parameters/X-Api-Key'
    - $ref: '#/components/parameters/Authorization'
    - $ref: '#/components/parameters/X-Mcld-Tenant'
    patch:
      summary: Update Carrier Pay
      description: Updates the carrier pay summary for the shipment.
      tags:
      - Shipments
      security:
      - OAuth:
        - carrieraudit:fullaccess
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CarrierPayUpdate'
      responses:
        '200':
          description: Carrier pay updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
  /shipments/{shipmentId}/carrier-other-pay:
    parameters:
    - $ref: '#/components/parameters/X-Correlation-Id'
    - $ref: '#/components/parameters/X-Api-Key'
    - $ref: '#/components/parameters/Authorization'
    - $ref: '#/components/parameters/X-Mcld-Tenant'
    patch:
      summary: Update Carrier Other Pay
      description: Updates the carrier other pay summary for the shipment.
      tags:
      - Shipments
      security:
      - OAuth:
        - carrieraudit:fullaccess
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/CarrierOtherPayUpdate'
      responses:
        '200':
          description: Carrier other pay updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
  /shipments/{shipmentId}/accessorials:
    parameters:
    - $ref: '#/components/parameters/X-Correlation-Id'
    - $ref: '#/components/parameters/X-Api-Key'
    - $ref: '#/components/parameters/Authorization'
    - $ref: '#/components/parameters/X-Mcld-Tenant'
    post:
      summary: Create Carrier Accessorial
      description: Creates a new accessorial charge on the specified shipment.
      tags:
      - Shipments
      security:
      - OAuth:
        - carrieraudit:fullaccess
      parameters:
      - name: shipmentId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessorialCreate'
      responses:
        '201':
          description: Accessorial created.
          headers:
            Location:
              description: URL of the newly created accessorial resource.
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
        '400':
          $ref: '#/components/responses/Standard-400'
        '401':
          $ref: '#/components/responses/Standard-401'
        '403':
          $ref: '#/components/responses/Standard-403'
        '404':
          $ref: '#/components/responses/Standard-404'
        '500':
          $ref: '#/components/responses/Standard-500'
tags:
- name: InnovationHub
  description: This API is part of Innovation Hub
components:
  parameters:
    X-Correlation-Id:
      name: X-Correlation-Id
      in: header
      description: A unique identifier that can be fed in to identify orchestrations
        between the client and server.  You can put any string here and that would
        correlate with the operation surrounding this call.  If a correlation ID is
        not supplied, the service will assign a random one that will be available
        on the response.
      required: false
      schema:
        type: string
        example: 493a7431-6d29-42e9-84b0
    X-Api-Key:
      name: X-Api-Key
      in: header
      description: A key that is issued by Innovation Hub which is associated to a
        policy that sets API entitlements and rate limits.
      required: true
      schema:
        type: string
        example: eyJvcmciOiI2MmY2YTYxZDgyODM5ZjAwMDE4NmExY2EiLCJpZCI6IjE1MzM2Zjg3ZWIzYTQxYWQ4MTViYzZkZmQwNzYyYzVhIiwiaCI6Im11cm11cjEyOCJ9
    Authorization:
      name: Authorization
      in: header
      description: Authorization token associated with the subject.
      schema:
        type: string
        example: '[Link Text](https://some.url)'
    X-Mcld-Tenant:
      name: X-Mcld-Tenant
      in: header
      description: The tenant ID of the company that the user is associated with.  This
        is a required field for all API calls.
      required: true
      schema:
        type: string
        example: 123456
  securitySchemes:
    APIKeyAuth:
      type: apiKey
      description: The API key is used against a policy to determine if the request
        is allowed to proceed.
      name: X-Api-Key
      in: header
    OAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/auth
          tokenUrl: https://auth.example.com/oauth/token
          scopes:
            carrieraudit:fullaccess: Full access to Carrier Invoicing API
  responses:
    Invoice-200:
      description: Invoice details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Invoice'
    Shipment-200:
      description: Shipment details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Shipment'
    '200':
      description: OK
      headers:
        X-Total-Count:
          $ref: '#/components/headers/Response-X-Total-Count'
      content:
        application/json:
          schema:
            type: object
            properties:
              invoices:
                type: array
                items:
                  $ref: '#/components/schemas/ShipmentSummary'
            required:
            - shipments
          example:
            shipments:
            - orderId: 9328423
            - movementId: 2342342
              moveStatus: Delivered
              totalAmount: 395.0
              currency: USD
            - movementId: 2342342
            - orderId: 9328423
              moveStatus: In Progress
              totalAmount: 220.0
              currency: USD
    Standard-400:
      description: '### Bad Request - The request is invalid or missing required data.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                code: INVALID_REQUEST
                message: Missing required field 'MovementID'.
                details:
                - Movement not found or has been voided.
    Standard-401:
      description: '### Unauthorized - Missing or invalid credentials (API key).'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            example:
              value:
                code: Unauthorized
                message: API key is missing or invalid.
    Standard-403:
      description: Forbidden - Authenticated but not allowed to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Standard-404:
      description: Resource Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Standard-405:
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Standard-500:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Standard-501:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Standard-502:
      description: Bad Gateway
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Standard-503:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Standard-504:
      description: Gateway Timeout
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  headers:
    Response-X-Mcld-Client:
      schema:
        type: string
        example: Zw7cG6rIIdi1llzyzX4NZqVN171szAtl
      description: The application that was used to make this call.
      required: false
    Response-X-Correlation-Id:
      schema:
        type: string
        example: 493a7431-6d29-42e9-84b0
      description: A unique identifier that can be fed in to identify orchestrations
        between the client and server.  You can put any string here and that would
        correlate with the operation surrounding this call.  If a correlation ID is
        not supplied, the service will assign a random one that will be available
        on the response.
      required: false
    Response-X-Mcld-Request-Duration:
      schema:
        type: string
        example: '45'
      description: Total process time for request in milliseconds.
      required: false
    Response-X-Mcld-Request-Time:
      schema:
        type: string
        example: 2023-08-21T13:18:30+0000
      description: Timestamp of when the service route was called.
      required: false
    Response-X-Total-Count:
      schema:
        type: integer
      example: 1234
      description: Total number of shipments matching the current filter.
      required: false
    Response-X-Mcld-Subject:
      schema:
        type: string
        example: waad|Hoe8Y74Nmum8c5T7mBbiFZ-mPGzuJBARpgLmo9z5tYE
      description: AuthO subject from the JWT token.
      required: false
    Response-Content-Disposition:
      description: Controls inline vs. attachment and suggested filename.
      schema:
        type: string
      example: attachment; filename="delivery_receipt_123.pdf"
      required: false
    Response-Content-Length:
      description: Size of response in bytes.
      schema:
        type: integer
      example: 582122
      required: false
  schemas:
    Location:
      type: object
      description: 'The location associated with a movement, such as its pickup or
        delivery point. Includes geographic address, location identifiers, and geocoordinates
        for mapping.

        '
      properties:
        locationId:
          type: string
          description: Unique identifer for the location (e.g., warehouse code)
          example: TESTBIAL
        name:
          type: string
          description: Name of the location
          example: Acme Products
        address1:
          type: string
          description: Primary street address.
          example: 123 Main Street
        address2:
          type: string
          description: Additional address information.
          example: Suite 100
        city:
          type: string
          description: Location city.
          example: Birmingham
        state:
          type: string
          description: State.
          example: Alabama
        postalCode:
          type: string
          description: ZIP or postal code.
          example: '35203'
        contactName:
          type: string
          description: Name of contact person at the location.
          example: John Doe
        contactPhone:
          type: string
          description: Phone number for contact person at the location.
          example: 555-123-4567
        latitude:
          type: number
          description: Latitude of the location.
          example: 33.5207
        longitude:
          type: number
          description: Longitude of the location.
          example: -86.8025
      required:
      - address1
      - city
      - state
      - postalCode
    DocumentType:
      type: string
      description: Category/classification of the document.
      enum:
      - BOL
      - POD
      - InvoiceImage
      - RateCon
      - Other
      example: POD
    DocumentStatus:
      type: string
      description: Availability state of the document in storage/processing.
      enum:
      - Available
      - Processing
      - Failed
      - Deleted
      example: Available
    InvoiceEventType:
      type: string
      description: Allowed invoice event types.
      enum:
      - NewOrder
      - MovementDelivered
      - CarrierPaymentRecordAdded
      - CarrierPaymentRecordUpdated
    InvoiceUpdate:
      type: object
      description: The fields that are allowed for partial updates to an carrier payment
        record (JSON Merge Patch).
      properties:
        status:
          type: string
          description: Open, Approved, Paid, Disputed, or Canceled.
          enum:
          - Open
          - Approved
          - Paid
          - Disputed
          - Canceled
        dueDate:
          type: string
          format: date
          description: New due date (YYYY-MM-DD)
        referenceNumber:
          type: string
          description: External customer reference or PO number.
        paymentTerms:
          type: string
          description: Human-readable terms.
        notes:
          type: string
          description: Free-form notes about the invoice.
        customFields:
          type: object
          additionalProperties: true
          description: Optional key/value extensions.
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
      additionalProperties: false
    InvoiceSummary:
      type: object
      description: Invoice for list views (no embedded documents).
      properties:
        shipmentId:
          type: string
        status:
          type: string
          description: Shipment status code (P=in progress, D=delivered)
          enum:
          - P
          - D
          example: P
        totalAmount:
          type: number
          format: float
        currency:
          type: string
          example: USD
        dueDate:
          type: string
          format: date
      required:
      - shipmentId
      - status
      - totalAmount
      - currency
    Payment:
      type: object
      description: A recorded payment applied to a shipment.
      properties:
        paymentId:
          type: string
          description: Unique identifier for the payment.
          example: PMT-001
        shipmentId:
          type: string
          description: ID of the shipment to which the payment is applied.
          example: INV-001
        amount:
          type: number
          format: float
          minimum: 0
          description: Amount applied.
          example: 395.0
        currency:
          type: string
          description: ISO currency code.
          example: USD
        paymentDate:
          type: string
          format: date
          description: The date the payment was made (YYYY-MM-DD)
          example: 2025-08-15
        method:
          type: string
          description: Payment method (e.g., ACH, Check, Wire, Card)
          example: ACH
        referenceNumber:
          type: string
          description: External reference number, such as check number or transaction
            ID.
          example: REF-8832901
        notes:
          type: string
          description: Free-form notes about this payment.
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the payment was created.
          example: 2025-08-20 10:22:03+00:00
      required:
      - paymentId
      - shipmentId
      - amount
      - currency
      - paymentDate
      - createdAt
    PaymentStatus:
      type: string
      description: Indicates whether the invoice is cleared for payment.
      enum:
      - Pending
      - ReadyForPayment
      - Paid
      - Rejected
      example: Paid
    Event:
      type: object
      description: An event related to an invoice, such as approval, payment, or dispute.
      properties:
        eventId:
          type: string
          description: Unique identifier for the event.
          example: EVT-123456
        invoiceId:
          type: string
          description: The ID of the invoice associated with the event.
          example: INV-20250808
        eventType:
          $ref: '#/components/schemas/InvoiceEventType'
          description: Type of event (e.g., invoiceApproved, invoicePaid, invoiceDisputed).
          example: invoiceApproved
        occurredAt:
          type: string
          format: date-time
          description: Timestamp when the event occurred.
          example: '2025-08-09T14:22:05Z'
        details:
          type: object
          additionalProperties: true
          description: Additional details about the event.
      required:
      - eventId
      - invoiceId
      - eventType
      - occurredAt
    Charge:
      type: object
      description: The accessorial charge included on the shipment.
      properties:
        chargeId:
          type: string
          description: Unique identifier for the charge.
          example: CHG-9012
        description:
          type: string
          description: A description of the charge.
          example: Fuel surcharge
        amount:
          type: number
          description: The total monetary amount of the charge.
          example: 175.5
        currency:
          type: string
          description: Currency code for the charge amount.
          example: USD
        chargeType:
          type: string
          description: Type/category of the charge.
          example: Accessorial
        payableTo:
          type: string
          description: Carrier ID of the "other pay" entity responsible for this charge.
          example: TESTBIAL
        createdDate:
          type: string
          format: date-time
          description: Timestamp when the charge was created.
          example: '2025-05-17T10:30:00Z'
      required:
      - chargeId
      - description
      - amount
      - currency
      - chargeType
    WebHookDetails:
      type: object
      required: [url, httpVerb]
      properties:
        url: 
          type: string
          format: url
          description: Destination URL for webhook calls.
        httpVerb:
          type: string
          description: HTTP method used to invoke the subscriber endpoint.
          enum: [POST, PUT]  
        headers:
          type: object
          additionalProperties: 
            type: string
          description: Optional static headers included with each call.
        secret:
          type: string
          description: Optional signing secret used for HMAC verification.      
    Invoice:
      type: object
      description: A carrier invoice submitted for one or more orders.
      properties:
        id:
          type: string
          description: Unique identifier for the invoice.
          example: INV-1234
        carrierId:
          type: string
          description: The ID of the carrier associated with the invoice.
          example: TESTBIAL
        invoiceNumber:
          type: string
          description: The invoice number provided by the carrier.
          example: B-987
        dateIssued:
          type: string
          format: date
          description: The date the invoice was issued.
          example: 2025-07-01
        status:
          type: string
          description: Shipment status code (P=in progress, D=delivered)
          enum:
          - P
          - D
          example: P
        totalAmount:
          type: number
          format: float
          description: Total amount payable of the shipment.
          example: 1245.75
        currency:
          type: string
          description: The currency in which the invoice was issued.
          example: used
        orders:
          type: array
          description: List of order IDs associated with the invoice.
          items:
            type: string
            example:
            - 480279
            - 480280
        charges:
          type: array
          description: List of accessorial charges included on the shipment.
          items:
            $ref: '#/components/schemas/Charge'
        documents:
          type: array
          description: List of supporting documents included with the shipment.
          items:
            type: object
            required: [id, size]
            properties:
              id: 
                type: string
                description: Identifier of the document (maps to DocumentPower ID).
                example: doc123456
              index:
                type: string
                description: Optional DocumentPower index within cabinet/folder.
                example: index123
              size:
                type: integer
                description: File size in bytes.
                example: 2048000    
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
        paymentApprovedAt:
          type: string
          format: date-time
          description: Timestamp when the invoice was set to ReadyForPayment.
        paymentApprovedBy:
          type: string
          description: User or process that approved the payment.
      required:
      - id
      - carrierId
      - invoiceNumber
      - dateIssued
      - status
      - totalAmount
      - currency
    Shipment:
      allOf:
      - $ref: '#/components/schemas/Invoice'
      - type: object
        description: Shipment detail with order, stop, carrier, and accessorial information.
        properties:
          orders:
            type: array
            items:
              $ref: '#/components/schemas/Order'
          stops:
            type: array
            items:
              $ref: '#/components/schemas/Stop'
          dispatcher:
            $ref: '#/components/schemas/Contact'
          operationsUser:
            $ref: '#/components/schemas/Contact'
          manifestNumber:
            type: string
            description: Manifest number for the shipment.
          accessorials:
            type: array
            description: Accessorials filtered to those whose payee matches the shipment's
              payee (server-side filtering per business rule).
            items:
              $ref: '#/components/schemas/Accessorial'
          carrier:
            $ref: '#/components/schemas/Carrier'
    ShipmentUpdate:
      allOf:
      - $ref: '#/components/schemas/InvoiceUpdate'
    ShipmentUpdateLimited:
      type: object
      description: Request body for updating a shipment's key fields. Only the specified fields are updatable. All others will be ignored.
      properties:
        bol:
          type: string
          description: Bill of Lading number
        weight: 
          type: number
          format: float
          minimum: 0
          description: Total weight of the shipment.
        pieces:
          type: integer
          minimum: 0
          description: Number of pieces/cases.
        payAmount:
          type: number
          format: float
          minimum: 0
          description: Carrier linehaul pay amount.
        accessorialPayAmount:
          type: number
          format: float
          minimum: 0
          description: Aggregated accessorial/'other pay' amount.
      additionalProperties: false       
    ShipmentSummary:
      allOf:
      - $ref: '#/components/schemas/InvoiceSummary'
    Contact:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        email:
          type: string
          format: email
          example: John.Doe@McLeodSoftware.com
    Order:
      type: object
      properties:
        id:
          type: string
          description: Order number
        bolNumber:
          type: string
          description: Bill of Lading (BOL) number
        consigneeReferenceNumber:
          type: string
          description: Consignee reference number
        weight:
          type: number
          format: float
          description: Weight of the order (pounds unless otherwise noted)
          example: 44000
        cases:
          type: integer
          description: Number of cases (if applicable)
          example: 50
        pieces:
          type: integer
          description: Number of pieces (if applicable)
          example: 500
    Stop:
      type: object
      properties:
        id:
          type: string
          description: Stop number
        name:
          type: string
          example: Acme Distribution Carrier
        city:
          type: string
          example: Birmingham
        state:
          type: string
          example: AL
        postalCode:
          type: string
          example: 35020
        actualArrivalAt:
          type: string
          format: date-time
          description: Actual arrival timestamp (UTC)
          example: '2025-09-19T14:30:00Z'
        actualDepartureAt:
          type: string
          format: date-time
          description: Actual departure timestamp (UTC)
          example: '2025-09-19T16:05:00Z'
    Accessorial:
      type: object
      description: Accessorial charge applicable to this shipment.
      properties:
        id:
          type: string
          description: Accessorial code.
        description:
          type: string
          example: Layover charge
        amount:
          type: number
          format: float
          example: 150.0
    Carrier:
      type: object
      description: The carrier assigned to the shipment.
      properties:
        id:
          type: string
        name:
          type: string
        mcNumber:
          type: string
          description: FMCSA MC number.
        dotNumber:
          type: string
          description: FMCSA DOT number.
        driverCell:
          type: string
          description: Driver cell phone number.
        driverEmail:
          type: string
          format: email
          description: Driver email (if available)
    EventSubscription:
      type: object
      description: A client subscription to be notified when specific invoice events
        occur.
      properties:
        subscriptionId:
          type: string
          description: Unique ID of the subscription (assigned by the server).
          example: SUB-9f2c7a
          readOnly: true
        event:
          type: string
          description: Event name to subscribe to (e.g., invoiceApproved, invoicePaid,
            invoiceDisputed).
          example: invoiceApproved
          readOnly: true
        type:
          type: string
          description: Delivery type for the subscription.
          enum: [WebHook]
          example: WebHook
          readOnly: true 
        webhook:
          $ref: '#/components/schemas/WebHookDetails'
          readonly: true 
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the subscription was created.
          example: '2025-08-11T14:22:05Z'
          readOnly: true 
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: Optional expiration timestamp for the subscription.
          readOnly: true 
      required:
      - event
      - subscriptionId
      - type
      - webhook
      - createdAt
    EventSubscriptionCreate: 
      type: object
      description: Payload to create a new event subscription.
      properties:
        event:
          type: string
          description: Event to subscribe to (e.g., invoiceApproved, invoicePaid,
            invoiceDisputed).
        type: 
          type: string
          description: Delivery type for the subscription.
          enum: [WebHook]  
        webhook:
          $ref: '#/components/schemas/WebHookDetails'  
        expiresAt:
          type: string
          format: date-time
          nullable: true
          description: Optional expiration timestamp for the subscription.
      additionalProperties: false        
      required:
      - event
      - type
      - webhook


    Error:
      type: object
      description: Standard error payload for 4xx/5xx responses.
      properties:
        code:
          type: string
          description: Machine-readable error code.
          example: INVALID_REQUEST
        message:
          type: string
          description: Human-readable summary of the error.
          example: Missing required field 'invoiceDate'.
        details:
          type: array
          description: Optional list of field-level issues or extra context.
          items:
            type: string
          example:
          - invoiceDate must be in format YYYY-MM-DD
          - amount must be greater than 0
      required:
      - code
      - message
    CarrierPayUpdate:
      type: object
      description: Fields allowed when updating the carrier payment summary for a
        shipment (JSON Merge Patch).
      properties:
        amount:
          type: number
          format: float
          minimum: 0
          description: Total carrier pay amount for this shipment (excluding 'other
            pay' items).
          example: 1200.0
        currency:
          type: string
          description: ISO 4217 currency code.
          example: USD
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
        dueDate:
          type: string
          format: date
          description: Due date for the carrier pay.
        referenceNumber:
          type: string
          description: External reference (PO, invoice no., etc.).
        notes:
          type: string
          description: Free-form notes.
        customFields:
          type: object
          additionalProperties: true
          description: Optional key/value extensions.
      additionalProperties: false
    CarrierOtherPayUpdate:
      type: object
      description: Fields allowed when updating non-linehaul 'other pay' totals for
        a shipment (JSON Merge Patch).
      properties:
        otherPayAmount:
          type: number
          format: float
          minimum: 0
          description: Aggregated non-linehaul carrier pay not captured as accessorial
            items.
          example: 175.5
        currency:
          type: string
          description: ISO 4217 currency code.
          example: USD
        notes:
          type: string
          description: Free-form notes about other pay.
        customFields:
          type: object
          additionalProperties: true
          description: Optional key/value extensions.
      additionalProperties: false
    AccessorialCreate:
      allOf:
      - $ref: '#/components/schemas/Accessorial'
      description: Payload for creating a new carrier accessorial on a shipment.
      required:
      - id
      - amount
